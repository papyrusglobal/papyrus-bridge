version: '3.5'

services:

  rabbit:
    image: rabbitmq:3
    container_name: rabbit_${COMPOSE_PROJECT_NAME:-validator}
    networks:
      - net_rabbit_bridge_request
      - net_rabbit_bridge_collected
      - net_rabbit_bridge_affirmation
      - net_rabbit_bridge_senderhome
      - net_rabbit_bridge_senderforeign
    volumes:
      - ~/papyrus_bridge/rabbitmq_${COMPOSE_PROJECT_NAME:-validator}:/var/lib/rabbitmq/mnesia
    env_file: .env
    environment: 
      - RABBITMQ_NODENAME=node@rabbit_${COMPOSE_PROJECT_NAME:-validator}
    restart: unless-stopped

  redis:
    image: redis:4
    container_name: redis_${COMPOSE_PROJECT_NAME:-validator}
    networks:
      - net_db_bridge_request
      - net_db_bridge_collected
      - net_db_bridge_affirmation
      - net_db_bridge_senderhome
      - net_db_bridge_senderforeign
    volumes:
      - ~/papyrus_bridge/redis_${COMPOSE_PROJECT_NAME:-validator}:/data
    command: redis-server --appendonly 'yes'
    restart: unless-stopped

  bridge_request:
    build: .
    container_name: bridge_request_${COMPOSE_PROJECT_NAME:-validator}
    depends_on:
      - rabbit
      - redis
    networks:
      - net_db_bridge_request
      - net_rabbit_bridge_request
    env_file: .env
    environment: 
      - NODE_ENV=production
      - QUEUE_URL=amqp://rabbit_${COMPOSE_PROJECT_NAME:-validator}
      - REDIS_URL=redis://redis_${COMPOSE_PROJECT_NAME:-validator}
      - VALIDATOR_ADDRESS_PRIVATE_KEY=${VALIDATOR_ADDRESS_PRIVATE_KEY}
    entrypoint: npm run watcher:signature-request
    command: 'true'
    restart: unless-stopped

  bridge_collected:
    build: .
    container_name: bridge_collected_${COMPOSE_PROJECT_NAME:-validator}
    depends_on:
      - rabbit
      - redis
    networks:
      - net_db_bridge_collected
      - net_rabbit_bridge_collected
    env_file: .env
    environment: 
      - NODE_ENV=production
      - QUEUE_URL=amqp://rabbit_${COMPOSE_PROJECT_NAME:-validator}
      - REDIS_URL=redis://redis_${COMPOSE_PROJECT_NAME:-validator}
      - VALIDATOR_ADDRESS=${VALIDATOR_ADDRESS}
    entrypoint: npm run watcher:collected-signatures
    command: 'true'
    restart: unless-stopped

  bridge_affirmation:
    build: .
    container_name: bridge_affirmation_${COMPOSE_PROJECT_NAME:-validator}
    depends_on:
      - rabbit
      - redis
    networks:
      - net_db_bridge_affirmation
      - net_rabbit_bridge_affirmation
    env_file: .env
    environment: 
      - NODE_ENV=production
      - QUEUE_URL=amqp://rabbit_${COMPOSE_PROJECT_NAME:-validator}
      - REDIS_URL=redis://redis_${COMPOSE_PROJECT_NAME:-validator}
      - VALIDATOR_ADDRESS=${VALIDATOR_ADDRESS}
    entrypoint: npm run watcher:affirmation-request
    command: 'true'
    restart: unless-stopped

  bridge_senderhome:
    build: .
    container_name: bridge_senderhome_${COMPOSE_PROJECT_NAME:-validator}
    depends_on:
      - rabbit
      - redis
    networks:
      - net_db_bridge_senderhome
      - net_rabbit_bridge_senderhome
    env_file: .env
    environment: 
      - NODE_ENV=production
      - QUEUE_URL=amqp://rabbit_${COMPOSE_PROJECT_NAME:-validator}
      - REDIS_URL=redis://redis_${COMPOSE_PROJECT_NAME:-validator}
      - VALIDATOR_ADDRESS_PRIVATE_KEY=${VALIDATOR_ADDRESS_PRIVATE_KEY}
    entrypoint: npm run sender:home
    command: 'true'
    restart: unless-stopped

  bridge_senderforeign:
    build: .
    container_name: bridge_senderforeign_${COMPOSE_PROJECT_NAME:-validator}
    depends_on:
      - rabbit
      - redis
    networks:
      - net_db_bridge_senderforeign
      - net_rabbit_bridge_senderforeign
    env_file: .env
    environment: 
      - NODE_ENV=production
      - QUEUE_URL=amqp://rabbit_${COMPOSE_PROJECT_NAME:-validator}
      - REDIS_URL=redis://redis_${COMPOSE_PROJECT_NAME:-validator}
      - VALIDATOR_ADDRESS_PRIVATE_KEY=${VALIDATOR_ADDRESS_PRIVATE_KEY}
    entrypoint: npm run sender:foreign
    command: 'true'
    restart: unless-stopped

networks:
  net_db_bridge_request:
    driver: bridge
    name: net_db_bridge_request
  net_db_bridge_collected:
    driver: bridge
    name: net_db_bridge_collected
  net_db_bridge_affirmation:
    driver: bridge
    name: net_db_bridge_affirmation
  net_db_bridge_senderhome:
    driver: bridge
    name: net_db_bridge_senderhome
  net_db_bridge_senderforeign:
    driver: bridge
    name: net_db_bridge_senderforeign
  net_rabbit_bridge_request:
    driver: bridge
    name: net_rabbit_bridge_request
  net_rabbit_bridge_collected:
    driver: bridge
    name: net_rabbit_bridge_collected
  net_rabbit_bridge_affirmation:
    driver: bridge
    name: net_rabbit_bridge_affirmation
  net_rabbit_bridge_senderhome:
    driver: bridge
    name: net_rabbit_bridge_senderhome
  net_rabbit_bridge_senderforeign:
    driver: bridge
    name: net_rabbit_bridge_senderforeign
